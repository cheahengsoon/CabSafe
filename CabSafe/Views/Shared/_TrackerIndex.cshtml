<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=7; IE=EmulateIE9; IE=10" />
    <title>@ViewBag.Title - CabSafe</title>    
    <!-- Styling for example container (NoteContainer & Logger)  -->
    <link rel="stylesheet" type="text/css" href="http://developer.here.com/apiexplorer/examples/templates/js/exampleHelpers.css" />
    <!-- By default we add ?with=all to load every package available, it's better to change this parameter to your use case. Options ?with=maps|positioning|places|placesdata|directions|datarendering|all -->
    <script type="text/javascript" charset="UTF-8" src="http://js.cit.api.here.com/se/2.5.3/jsl.js?with=all"></script>
    <!-- JavaScript for example container (NoteContainer & Logger)  -->
    <script type="text/javascript" charset="UTF-8" src="http://developer.here.com/apiexplorer/examples/templates/js/exampleHelpers.js"></script>
    <style type="text/css">
        #mapContainer {
            width: 100%;
            height: 500px;
        }
    </style>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body id="trackerBody" style="margin-top:15px">
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("CabSafe", "Index", "Home", null, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Home", "Index", "Home")</li>
                    <li>@Html.ActionLink("About", "About", "Home")</li>
                    <li>@Html.ActionLink("Contact", "Contact", "Home")</li>
                </ul>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - CabSafe</p>
        </footer>
    </div>
    <script type="text/javascript" id="exampleJsSource">
        /*	Setup authentication app_id and app_code
        *	WARNING: this is a demo-only key
        *	please register for an Evaluation, Base or Commercial key for use in your app.
        *	Just visit http://developer.here.com/get-started for more details. Thank you!
        */
        nokia.Settings.set("app_id", "bRyDGfbIrAbAOXmWwAb8");
        nokia.Settings.set("app_code", "KqFExx5Mw_cVTDMm1vcSg");
        // Use staging environment (remove the line for production environment)
        nokia.Settings.set("serviceMode", "cit");

        // Get the DOM node to which we will append the map
        var mapContainer = document.getElementById("mapContainer");
        // Create a map inside the map container DOM node
        var map = new nokia.maps.map.Display(mapContainer, {
            // Initial center and zoom level of the map
            zoomLevel: 2,
            components: [
                // We add the behavior component to allow panning / zooming of the map
                new nokia.maps.map.component.Behavior()
            ]
            
        });

        /* The positioning manager is only available if the browser used supports
         * W3C geolocation API
         */
        if (nokia.maps.positioning.Manager) {
            var positioning = new nokia.maps.positioning.Manager();
            // Trigger the load of data, after the map emmits the "displayready" event
            map.addListener("displayready", function () {
                // Gets the current position, if available the first given callback function is executed else the second
                positioning.getCurrentPosition(
                    // If a position is provided by W3C geolocation API of the browser
                    function (position) {
                        var coords = position.coords, // we retrieve the longitude/latitude from position
                            marker = new nokia.maps.map.StandardMarker(coords), // creates a marker
                            /* Create a circle map object  on the  geographical coordinates of
                             * provided position with a radius in meters of the accuracy of the position
                             */                             
                            accuracyCircle = new nokia.maps.map.Circle(coords, coords.accuracy);
                        // Add the circle and marker to the map's object collection so they will be rendered onto the map.
                        map.objects.addAll([accuracyCircle, marker]);
                        /* This method zooms the map to ensure that the bounding box calculated from the size of the circle
                         * shape is visible in its entirety in map's viewport.
                         */
                        map.zoomTo(accuracyCircle.getBoundingBox(), false, "default");
                        alert("s" + coords);
                    },
                    // Something went wrong we wee unable to retrieve the GPS location
                    function (error) {
                        var errorMsg = "Location could not be determined: ";

                        // We determine what caused the error and generate error message
                        if (error.code == 1) errorMsg += "PERMISSION_DENIED";
                        else if (error.code == 2) errorMsg += "POSITION_UNAVAILABLE";
                        else if (error.code == 3) errorMsg += "TIMEOUT";
                        else errorMsg += "UNKNOWN_ERROR";

                        // Throw an alert with error message
                        alert(errorMsg);
                    }
                );
            });
        }

        /* We create a UI notecontainer for example description
         * NoteContainer is a UI helper function and not part of the Nokia Maps API
         * See exampleHelpers.js for implementation details
         */
        //var noteContainer = new NoteContainer({
        //    id: "positioningUi",
        //    parent: document.getElementById("uiContainer"),
        //    title: "Center the map on device's position",
        //    content:
        //        '<p>This example shows how the positioning is achieved with the API. ' +
        //        'Currently supported environments are most of mobile devices, like tablets or netbooks.</p>' +
        //        '<p>The following desktop browsers support positioning:</p>' +
        //        '<ul><li>Internet Explorer 9+,</li><li>FireFox 3.5+,</li><li> Google Chrome 5+,</li><li> Safari 5+,</li><li> Opera 10+</li></ul>' +
        //        '<p><span class="tip">The browser will ask for permission to find your location.' +
        //        'This example will show your position only if you agree to share it.</span></p>'
        //});

    </script>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
</body>
</html>
